{"version":3,"file":"static/js/416.9dc34e4a.chunk.js","mappings":"8MAEO,MAAMA,GAAqBC,EAAAA,EAAAA,IAAO,UAAU;;;;;;;;;;EAYtCC,GAAUD,EAAAA,EAAAA,IAAO,IAAI;;EAIrBE,GAAiBF,EAAAA,EAAAA,IAAO,MAAM;;;;;;EAS9BG,EAAgBH,EAAAA,GAAOI,GAAG;;;;;EAO1BC,EAAkBL,EAAAA,GAAOI,GAAG;;;;;;;;;;;;;;;;;;;;eClBzC,MA2DA,GAAeE,EAAAA,EAAAA,IAAf,EA3DoBC,IAAqE,IAApE,MAAEC,EAAK,QAAEC,EAAO,OAAEC,EAAM,cAAEC,EAAa,EAAEC,GAAqBL,EAqBjF,OACIM,EAAAA,EAAAA,KAACd,EAAkB,CAAAe,UACjBD,EAAAA,EAAAA,KAACE,EAAAA,GAAK,CAACC,UAAU,KAAKC,aAAW,EAAAH,UAC/BD,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACC,QAAQ,SAASC,MAAM,SAAQN,UAClCD,EAAAA,EAAAA,KAACX,EAAc,CAAAY,UACbO,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGZ,SAAA,EAClCD,EAAAA,EAAAA,KAAA,MAAAC,SAAKF,EAAEJ,MACPK,EAAAA,EAAAA,KAACZ,EAAO,CAAAa,SAAEF,EAAEH,KAGXE,GAAiBA,EAAcgB,OAAS,IACrCd,EAAAA,EAAAA,KAACV,EAAa,CAAAW,UACZD,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAtBzBC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,cAAe,IACfC,QAAQ,EAeoCtB,SACvBH,EAAc0B,KAAI,CAACC,EAAMC,KACtBlB,EAAAA,EAAAA,MAAChB,EAAe,CAAAS,SAAA,EACdD,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,CAACC,IAAKH,EAAKI,KAAMC,MAAM,QAAQC,OAAO,WAC9C/B,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAC,SAAIF,EAAE0B,EAAKO,UAHSN,SAWjC7B,IACGG,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACC,KAAK,SAASC,QAASA,KAAMC,OA9CrCC,EA8C8C,eA7C9CC,SAASC,eAAeF,GAChCG,eAAe,CACrBC,SAAU,WAHIJ,KA8CyD,EAAApC,SACtDF,EAAEF,eAOE,G","sources":["components/MiddleBlock/styles.tsx","components/MiddleBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MiddleBlockSection = styled(\"section\")`\r\n    position: relative;\r\n    padding: 7.5rem 0 3rem;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media screen and (max-width: 1024px) {\r\n        padding: 5.5rem 0 3rem;\r\n    }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n    padding: 0.75rem 0 0.75rem;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n    max-width: 570px;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        max-width: 100%;\r\n    }\r\n`;\r\n\r\n\r\nexport const SliderWrapper = styled.div`\r\n    width: 100%;\r\n    max-width: 500px;  // Adjust width as needed\r\n    margin: 0 auto;\r\n    text-align: center;\r\n`;\r\n\r\nexport const IconTextWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;  // Stack icon above text\r\n    align-items: center;     // Center horizontally\r\n    justify-content: center; // Center vertically\r\n    text-align: center;\r\n    gap: 10px;              // Add space between icon & text\r\n\r\n    img {\r\n        display: block;        // Ensure it's treated as a block element\r\n        margin: 0 auto;        // Center horizontally\r\n    }\r\n\r\n    p {\r\n        font-size: 16px;\r\n        color: #333;\r\n        margin: 0;\r\n        padding: 0;\r\n        text-align: center;\r\n    }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Slide } from \"react-awesome-reveal\";\r\nimport Slider from \"react-slick\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\"; // Import SvgIcon component\r\nimport { MiddleBlockSection, Content, ContentWrapper, SliderWrapper, IconTextWrapper } from \"./styles\";\r\n\r\ninterface MiddleBlockProps {\r\n  title: string;\r\n  content: string;\r\n  button: string;\r\n  sliderContent?: { icon: string; text: string }[]; // Array for SVGs & text\r\n  t: TFunction;\r\n}\r\n\r\nconst MiddleBlock = ({ title, content, button, sliderContent, t }: MiddleBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  // Slider settings\r\n// Slider settings\r\n  const sliderSettings = {\r\n    dots: false,            // Show navigation dots\r\n    infinite: true,        // Infinite looping\r\n    speed: 500,           // Transition speed\r\n    slidesToShow: 1,      // Only ONE item at a time\r\n    slidesToScroll: 1,\r\n    autoplay: true,       // Auto-scroll enabled\r\n    autoplaySpeed: 3000,  // Time before sliding to next item\r\n    arrows: false,        // Hide navigation arrows (optional)\r\n  };\r\n\r\n  return (\r\n      <MiddleBlockSection>\r\n        <Slide direction=\"up\" triggerOnce>\r\n          <Row justify=\"center\" align=\"middle\">\r\n            <ContentWrapper>\r\n              <Col lg={24} md={24} sm={24} xs={24}>\r\n                <h6>{t(title)}</h6>\r\n                <Content>{t(content)}</Content>\r\n\r\n                {/* Slider with SVG Icons */}\r\n                {sliderContent && sliderContent.length > 0 && (\r\n                    <SliderWrapper>\r\n                      <Slider {...sliderSettings}>\r\n                        {sliderContent.map((item, index) => (\r\n                            <IconTextWrapper key={index}>\r\n                              <SvgIcon src={item.icon} width=\"150px\" height=\"150px\" />\r\n                              <br/>\r\n                              <p>{t(item.text)}</p>\r\n                            </IconTextWrapper>\r\n                        ))}\r\n                      </Slider>\r\n                    </SliderWrapper>\r\n                )}\r\n\r\n                {/* Button Below Slider */}\r\n                {button && (\r\n                    <Button name=\"submit\" onClick={() => scrollTo(\"mission\")}>\r\n                      {t(button)}\r\n                    </Button>\r\n                )}\r\n              </Col>\r\n            </ContentWrapper>\r\n          </Row>\r\n        </Slide>\r\n      </MiddleBlockSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(MiddleBlock);\r\n"],"names":["MiddleBlockSection","styled","Content","ContentWrapper","SliderWrapper","div","IconTextWrapper","withTranslation","_ref","title","content","button","sliderContent","t","_jsx","children","Slide","direction","triggerOnce","Row","justify","align","_jsxs","Col","lg","md","sm","xs","length","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","arrows","map","item","index","SvgIcon","src","icon","width","height","text","Button","name","onClick","scrollTo","id","document","getElementById","scrollIntoView","behavior"],"sourceRoot":""}